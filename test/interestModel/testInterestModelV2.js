const { expect } = require("chai");
const { utils } = require("ethers");

let blocksPerYear = "2425846"; // Ethereum Mainnet

let interestModelConfigs = {
  StablePrimaryInterestModel: {
    contract: "",
    optimal: "0.9",
    slope_1: "0.05",
    slope_2: "0.6",
    interestExpectedResult: [
      0, 229015178, 458030357, 687045536, 916060715, 1145075894, 1374091073,
      1603106251, 1832121430, 2061136609, 2290151788, 2519166967, 2748182146,
      2977197325, 3206212503, 3435227682, 3664242861, 3893258040, 4122273219,
      4351288398, 4580303577, 4809318755, 5038333934, 5267349113, 5496364292,
      5725379471, 5954394650, 6183409828, 6412425007, 6641440186, 6870455365,
      7099470544, 7328485723, 7557500902, 7786516080, 8015531259, 8244546438,
      8473561617, 8702576796, 8931591975, 9160607154, 9389622332, 9618637511,
      9847652690, 10076667869, 10305683048, 10534698227, 10763713406,
      10992728584, 11221743763, 11450758942, 11679774121, 11908789300,
      12137804479, 12366819657, 12595834836, 12824850015, 13053865194,
      13282880373, 13511895552, 13740910731, 13969925909, 14198941088,
      14427956267, 14656971446, 14885986625, 15115001804, 15344016983,
      15573032161, 15802047340, 16031062519, 16260077698, 16489092877,
      16718108056, 16947123234, 17176138413, 17405153592, 17634168771,
      17863183950, 18092199129, 18321214308, 18550229486, 18779244665,
      19008259844, 19237275023, 19466290202, 19695305381, 19924320560,
      20153335738, 20382350917, 20611366096, 45345005412, 70078644728,
      94812284044, 119545923360, 144279562676, 169013201992, 193746841308,
      218480480624, 243214119940, 267947759255,
    ],
  },
  StableSecondaryInterestModel: {
    contract: "",
    optimal: "0.8",
    slope_1: "0.07",
    slope_2: "1",
    interestExpectedResult: [
      0, 360698906, 721397813, 1082096720, 1442795626, 1803494533, 2164193440,
      2524892346, 2885591253, 3246290160, 3606989066, 3967687973, 4328386880,
      4689085786, 5049784693, 5410483600, 5771182507, 6131881413, 6492580320,
      6853279227, 7213978133, 7574677040, 7935375947, 8296074853, 8656773760,
      9017472667, 9378171573, 9738870480, 10099569387, 10460268294, 10820967200,
      11181666107, 11542365014, 11903063920, 12263762827, 12624461734,
      12985160640, 13345859547, 13706558454, 14067257360, 14427956267,
      14788655174, 15149354081, 15510052987, 15870751894, 16231450801,
      16592149707, 16952848614, 17313547521, 17674246427, 18034945334,
      18395644241, 18756343147, 19117042054, 19477740961, 19838439867,
      20199138774, 20559837681, 20920536588, 21281235494, 21641934401,
      22002633308, 22363332214, 22724031121, 23084730028, 23445428934,
      23806127841, 24166826748, 24527525654, 24888224561, 25248923468,
      25609622375, 25970321281, 26331020188, 26691719095, 27052418001,
      27413116908, 27773815815, 28134514721, 28495213628, 28855912535,
      49467278631, 70078644728, 90690010825, 111301376921, 131912743018,
      152524109114, 173135475211, 193746841308, 214358207404, 234969573501,
      255580939597, 276192305694, 296803671791, 317415037887, 338026403984,
      358637770081, 379249136177, 399860502274, 420471868370, 441083234467,
    ],
  },
  MainPrimaryInterestModel: {
    contract: "",
    optimal: "0.7",
    slope_1: "0.05",
    slope_2: "1",
    interestExpectedResult: [
      0, 294448087, 588896174, 883344261, 1177792348, 1472240435, 1766688522,
      2061136609, 2355584696, 2650032783, 2944480870, 3238928958, 3533377045,
      3827825132, 4122273219, 4416721306, 4711169393, 5005617480, 5300065567,
      5594513654, 5888961741, 6183409828, 6477857916, 6772306003, 7066754090,
      7361202177, 7655650264, 7950098351, 8244546438, 8538994525, 8833442612,
      9127890699, 9422338787, 9716786874, 10011234961, 10305683048, 10600131135,
      10894579222, 11189027309, 11483475396, 11777923483, 12072371570,
      12366819657, 12661267745, 12955715832, 13250163919, 13544612006,
      13839060093, 14133508180, 14427956267, 14722404354, 15016852441,
      15311300528, 15605748616, 15900196703, 16194644790, 16489092877,
      16783540964, 17077989051, 17372437138, 17666885225, 17961333312,
      18255781399, 18550229486, 18844677574, 19139125661, 19433573748,
      19728021835, 20022469922, 20316918009, 20611366096, 34352276827,
      48093187558, 61834098289, 75575009020, 89315919751, 103056830483,
      116797741214, 130538651945, 144279562676, 158020473407, 171761384138,
      185502294869, 199243205600, 212984116331, 226725027062, 240465937793,
      254206848524, 267947759255, 281688669987, 295429580718, 309170491449,
      322911402180, 336652312911, 350393223642, 364134134373, 377875045104,
      391615955835, 405356866566, 419097777297, 432838688028,
    ],
  },
  MainSecondaryInterestModel: {
    contract: "",
    optimal: "0.65",
    slope_1: "0.07",
    slope_2: "0.8",
    interestExpectedResult: [
      0, 443937115, 887874231, 1331811347, 1775748463, 2219685579, 2663622695,
      3107559811, 3551496927, 3995434043, 4439371159, 4883308275, 5327245391,
      5771182507, 6215119622, 6659056738, 7102993854, 7546930970, 7990868086,
      8434805202, 8878742318, 9322679434, 9766616550, 10210553666, 10654490782,
      11098427898, 11542365014, 11986302130, 12430239245, 12874176361,
      13318113477, 13762050593, 14205987709, 14649924825, 15093861941,
      15537799057, 15981736173, 16425673289, 16869610405, 17313547521,
      17757484637, 18201421753, 18645358868, 19089295984, 19533233100,
      19977170216, 20421107332, 20865044448, 21308981564, 21752918680,
      22196855796, 22640792912, 23084730028, 23528667144, 23972604260,
      24416541375, 24860478491, 25304415607, 25748352723, 26192289839,
      26636226955, 27080164071, 27524101187, 27968038303, 28411975419,
      28855912535, 38278251322, 47700590109, 57122928896, 66545267683,
      75967606470, 85389945257, 94812284044, 104234622831, 113656961618,
      123079300405, 132501639192, 141923977979, 151346316766, 160768655553,
      170190994340, 179613333127, 189035671914, 198458010701, 207880349488,
      217302688275, 226725027062, 236147365849, 245569704636, 254992043423,
      264414382210, 273836720997, 283259059784, 292681398571, 302103737358,
      311526076145, 320948414932, 330370753719, 339793092506, 349215431294,
      358637770081,
    ],
  },
};

describe("Test for new interest model", function () {
  it("Deploy new interest model", async function () {
    for (model in interestModelConfigs) {
      const InterestRateModel = await ethers.getContractFactory(model);
      let modelConfig = interestModelConfigs[model];
      let interestRateModel = await InterestRateModel.deploy(blocksPerYear);
      await interestRateModel.deployed();

      modelConfig.contract = interestRateModel;
    }
  });

  it("Check borrow interest rate with different URs", async function () {
    for (model in interestModelConfigs) {
      let modelConfig = interestModelConfigs[model];
      let interestRateModel = modelConfig.contract;
      // console.log(model,"\n\n");
      for (let i = 0; i <= 100; i++) {
        // console.log("current ur is  ", i, "%");
        let borrows = i;
        let cash = 100 - i;
        let reserves = 0;
        let borrowRate = await interestRateModel.getBorrowRate(
          cash,
          borrows,
          reserves
        );
        // console.log("borrow per block", borrowRate.toString());
        let interestExpect = modelConfig.interestExpectedResult[i];
        // console.log("interest expect ", interestExpect, "\n");

        expect(borrowRate.toString()).to.equal(interestExpect.toString());
      }
    }
  });
});
